stages:
  - main-build

variables:
  GIT_DEPTH: "1"
  CONTAINER_REGISTRIES: |
    voxsoft/google-fluentd-sidecar
    voxmaster/google-fluentd-sidecar
    $CI_REGISTRY_IMAGE

default:
  image: ezkrg/buildx:latest
  tags:
    - docker
  services:
    - docker:dind
  before_script:
    # Get latest release of google-fluentd
    - apk add curl
    - export RELEASE=$(curl -Ls https://github.com/GoogleCloudPlatform/google-fluentd/tags | grep -oE '[0-9]+\.[0-9]+\.[0-9]+\.tar\.gz' | head -n 1 | cut -d '.' -f -3)
    - echo -e "\n fluentd:\e[44m ${RELEASE} \e[0m\n"
    # Create a set of tags for the image with multiple registries
    - for REGISTRY in $CONTAINER_REGISTRIES; do
        TAGS="$TAGS -t ${REGISTRY}:${RELEASE} -t ${REGISTRY}:latest" ;
      done
    # Enable experimental feature to be able to inspect remote images
    - 'mkdir -p ~/.docker && echo ''{"experimental": "enabled"}'' > ~/.docker/config.json'
    # Authenticate to Container Registry
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY_IMAGE
    - docker login -u $CONTAINER_REGISTRY_USER -p $CONTAINER_REGISTRY_PASSWORD

Build Main Image:
  stage: main-build
  script:
    # Stop if image already exists
    - |
      if [ "${FORCE_REBUILD}" == "true" ]
        then echo -e "\e[41mImage Rebuild Forced!\e[0m"
        else docker manifest inspect ${CI_REGISTRY_IMAGE}:${RELEASE} > /dev/null && echo "Version ${RELEASE} is already exists" && exit 0
      fi
    # Build container image
    - docker buildx create --name mybuilder --use
    - docker buildx build --platform linux/arm64/v8,linux/amd64 --push
        $TAGS
        --build-arg RELEASE=${RELEASE} .
